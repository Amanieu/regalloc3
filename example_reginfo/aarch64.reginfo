; Generated by regalloc3-tool, do not edit manually
; Re-generate with: cargo run -p regalloc3-tool -- example-reginfo -f 8 aarch64

r0 = reg unit0 ; x0
r1 = reg unit1 ; x1
r2 = reg unit2 ; x2
r3 = reg unit3 ; x3
r4 = reg unit4 ; x4
r5 = reg unit5 ; x5
r6 = reg unit6 ; x6
r7 = reg unit7 ; x7
r8 = reg unit8 ; x8
r9 = reg unit9 ; x9
r10 = reg unit10 ; x10
r11 = reg unit11 ; x11
r12 = reg unit12 ; x12
r13 = reg unit13 ; x13
r14 = reg unit14 ; x14
r15 = reg unit15 ; x15
r16 = reg unit16 ; x16
r17 = reg unit17 ; x17
r18 = reg unit18 ; x18
r19 = reg unit19 ; x19
r20 = reg unit20 ; x20
r21 = reg unit21 ; x21
r22 = reg unit22 ; x22
r23 = reg unit23 ; x23
r24 = reg unit24 ; x24
r25 = reg unit25 ; x25
r26 = reg unit26 ; x26
r27 = reg unit27 ; x27
r28 = reg unit28 ; x28
r29 = reg unit29 ; x29
r30 = reg unit30 ; x30
r31 = reg nonallocatable ; sp
r32 = reg nonallocatable ; xzr
r33 = stack unit31 ; int_stack0
r34 = stack unit32 ; int_stack1
r35 = stack unit33 ; int_stack2
r36 = stack unit34 ; int_stack3
r37 = stack unit35 ; int_stack4
r38 = stack unit36 ; int_stack5
r39 = stack unit37 ; int_stack6
r40 = stack unit38 ; int_stack7
r41 = reg unit39 ; d0
r42 = reg unit40 ; d1
r43 = reg unit41 ; d2
r44 = reg unit42 ; d3
r45 = reg unit43 ; d4
r46 = reg unit44 ; d5
r47 = reg unit45 ; d6
r48 = reg unit46 ; d7
r49 = reg unit47 ; d8
r50 = reg unit48 ; d9
r51 = reg unit49 ; d10
r52 = reg unit50 ; d11
r53 = reg unit51 ; d12
r54 = reg unit52 ; d13
r55 = reg unit53 ; d14
r56 = reg unit54 ; d15
r57 = reg unit55 ; d16
r58 = reg unit56 ; d17
r59 = reg unit57 ; d18
r60 = reg unit58 ; d19
r61 = reg unit59 ; d20
r62 = reg unit60 ; d21
r63 = reg unit61 ; d22
r64 = reg unit62 ; d23
r65 = reg unit63 ; d24
r66 = reg unit64 ; d25
r67 = reg unit65 ; d26
r68 = reg unit66 ; d27
r69 = reg unit67 ; d28
r70 = reg unit68 ; d29
r71 = reg unit69 ; d30
r72 = reg unit70 ; d31
r73 = stack unit71 ; fp64_stack0
r74 = stack unit72 ; fp64_stack1
r75 = stack unit73 ; fp64_stack2
r76 = stack unit74 ; fp64_stack3
r77 = stack unit75 ; fp64_stack4
r78 = stack unit76 ; fp64_stack5
r79 = stack unit77 ; fp64_stack6
r80 = stack unit78 ; fp64_stack7
r81 = reg unit39 unit79 ; q0
r82 = reg unit40 unit80 ; q1
r83 = reg unit41 unit81 ; q2
r84 = reg unit42 unit82 ; q3
r85 = reg unit43 unit83 ; q4
r86 = reg unit44 unit84 ; q5
r87 = reg unit45 unit85 ; q6
r88 = reg unit46 unit86 ; q7
r89 = reg unit47 unit87 ; q8
r90 = reg unit48 unit88 ; q9
r91 = reg unit49 unit89 ; q10
r92 = reg unit50 unit90 ; q11
r93 = reg unit51 unit91 ; q12
r94 = reg unit52 unit92 ; q13
r95 = reg unit53 unit93 ; q14
r96 = reg unit54 unit94 ; q15
r97 = reg unit55 unit95 ; q16
r98 = reg unit56 unit96 ; q17
r99 = reg unit57 unit97 ; q18
r100 = reg unit58 unit98 ; q19
r101 = reg unit59 unit99 ; q20
r102 = reg unit60 unit100 ; q21
r103 = reg unit61 unit101 ; q22
r104 = reg unit62 unit102 ; q23
r105 = reg unit63 unit103 ; q24
r106 = reg unit64 unit104 ; q25
r107 = reg unit65 unit105 ; q26
r108 = reg unit66 unit106 ; q27
r109 = reg unit67 unit107 ; q28
r110 = reg unit68 unit108 ; q29
r111 = reg unit69 unit109 ; q30
r112 = reg unit70 unit110 ; q31
r113 = stack unit111 ; fp128_stack0
r114 = stack unit112 ; fp128_stack1
r115 = stack unit113 ; fp128_stack2
r116 = stack unit114 ; fp128_stack3
r117 = stack unit115 ; fp128_stack4
r118 = stack unit116 ; fp128_stack5
r119 = stack unit117 ; fp128_stack6
r120 = stack unit118 ; fp128_stack7

rg0 = r0 r1 ; (x0 x1)
rg1 = r2 r3 ; (x2 x3)
rg2 = r4 r5 ; (x4 x5)
rg3 = r6 r7 ; (x6 x7)
rg4 = r8 r9 ; (x8 x9)
rg5 = r10 r11 ; (x10 x11)
rg6 = r12 r13 ; (x12 x13)
rg7 = r14 r15 ; (x14 x15)
rg8 = r16 r17 ; (x16 x17)
rg9 = r18 r19 ; (x18 x19)
rg10 = r20 r21 ; (x20 x21)
rg11 = r22 r23 ; (x22 x23)
rg12 = r24 r25 ; (x24 x25)
rg13 = r26 r27 ; (x26 x27)
rg14 = r28 r29 ; (x28 x29)
rg15 = r41 r42 ; (d0 d1)
rg16 = r42 r43 ; (d1 d2)
rg17 = r43 r44 ; (d2 d3)
rg18 = r44 r45 ; (d3 d4)
rg19 = r45 r46 ; (d4 d5)
rg20 = r46 r47 ; (d5 d6)
rg21 = r47 r48 ; (d6 d7)
rg22 = r48 r49 ; (d7 d8)
rg23 = r49 r50 ; (d8 d9)
rg24 = r50 r51 ; (d9 d10)
rg25 = r51 r52 ; (d10 d11)
rg26 = r52 r53 ; (d11 d12)
rg27 = r53 r54 ; (d12 d13)
rg28 = r54 r55 ; (d13 d14)
rg29 = r55 r56 ; (d14 d15)
rg30 = r56 r57 ; (d15 d16)
rg31 = r57 r58 ; (d16 d17)
rg32 = r58 r59 ; (d17 d18)
rg33 = r59 r60 ; (d18 d19)
rg34 = r60 r61 ; (d19 d20)
rg35 = r61 r62 ; (d20 d21)
rg36 = r62 r63 ; (d21 d22)
rg37 = r63 r64 ; (d22 d23)
rg38 = r64 r65 ; (d23 d24)
rg39 = r65 r66 ; (d24 d25)
rg40 = r66 r67 ; (d25 d26)
rg41 = r67 r68 ; (d26 d27)
rg42 = r68 r69 ; (d27 d28)
rg43 = r69 r70 ; (d28 d29)
rg44 = r70 r71 ; (d29 d30)
rg45 = r71 r72 ; (d30 d31)
rg46 = r72 r41 ; (d31 d0)
rg47 = r41 r42 r43 ; (d0 d1 d2)
rg48 = r42 r43 r44 ; (d1 d2 d3)
rg49 = r43 r44 r45 ; (d2 d3 d4)
rg50 = r44 r45 r46 ; (d3 d4 d5)
rg51 = r45 r46 r47 ; (d4 d5 d6)
rg52 = r46 r47 r48 ; (d5 d6 d7)
rg53 = r47 r48 r49 ; (d6 d7 d8)
rg54 = r48 r49 r50 ; (d7 d8 d9)
rg55 = r49 r50 r51 ; (d8 d9 d10)
rg56 = r50 r51 r52 ; (d9 d10 d11)
rg57 = r51 r52 r53 ; (d10 d11 d12)
rg58 = r52 r53 r54 ; (d11 d12 d13)
rg59 = r53 r54 r55 ; (d12 d13 d14)
rg60 = r54 r55 r56 ; (d13 d14 d15)
rg61 = r55 r56 r57 ; (d14 d15 d16)
rg62 = r56 r57 r58 ; (d15 d16 d17)
rg63 = r57 r58 r59 ; (d16 d17 d18)
rg64 = r58 r59 r60 ; (d17 d18 d19)
rg65 = r59 r60 r61 ; (d18 d19 d20)
rg66 = r60 r61 r62 ; (d19 d20 d21)
rg67 = r61 r62 r63 ; (d20 d21 d22)
rg68 = r62 r63 r64 ; (d21 d22 d23)
rg69 = r63 r64 r65 ; (d22 d23 d24)
rg70 = r64 r65 r66 ; (d23 d24 d25)
rg71 = r65 r66 r67 ; (d24 d25 d26)
rg72 = r66 r67 r68 ; (d25 d26 d27)
rg73 = r67 r68 r69 ; (d26 d27 d28)
rg74 = r68 r69 r70 ; (d27 d28 d29)
rg75 = r69 r70 r71 ; (d28 d29 d30)
rg76 = r70 r71 r72 ; (d29 d30 d31)
rg77 = r71 r72 r41 ; (d30 d31 d0)
rg78 = r72 r41 r42 ; (d31 d0 d1)
rg79 = r41 r42 r43 r44 ; (d0 d1 d2 d3)
rg80 = r42 r43 r44 r45 ; (d1 d2 d3 d4)
rg81 = r43 r44 r45 r46 ; (d2 d3 d4 d5)
rg82 = r44 r45 r46 r47 ; (d3 d4 d5 d6)
rg83 = r45 r46 r47 r48 ; (d4 d5 d6 d7)
rg84 = r46 r47 r48 r49 ; (d5 d6 d7 d8)
rg85 = r47 r48 r49 r50 ; (d6 d7 d8 d9)
rg86 = r48 r49 r50 r51 ; (d7 d8 d9 d10)
rg87 = r49 r50 r51 r52 ; (d8 d9 d10 d11)
rg88 = r50 r51 r52 r53 ; (d9 d10 d11 d12)
rg89 = r51 r52 r53 r54 ; (d10 d11 d12 d13)
rg90 = r52 r53 r54 r55 ; (d11 d12 d13 d14)
rg91 = r53 r54 r55 r56 ; (d12 d13 d14 d15)
rg92 = r54 r55 r56 r57 ; (d13 d14 d15 d16)
rg93 = r55 r56 r57 r58 ; (d14 d15 d16 d17)
rg94 = r56 r57 r58 r59 ; (d15 d16 d17 d18)
rg95 = r57 r58 r59 r60 ; (d16 d17 d18 d19)
rg96 = r58 r59 r60 r61 ; (d17 d18 d19 d20)
rg97 = r59 r60 r61 r62 ; (d18 d19 d20 d21)
rg98 = r60 r61 r62 r63 ; (d19 d20 d21 d22)
rg99 = r61 r62 r63 r64 ; (d20 d21 d22 d23)
rg100 = r62 r63 r64 r65 ; (d21 d22 d23 d24)
rg101 = r63 r64 r65 r66 ; (d22 d23 d24 d25)
rg102 = r64 r65 r66 r67 ; (d23 d24 d25 d26)
rg103 = r65 r66 r67 r68 ; (d24 d25 d26 d27)
rg104 = r66 r67 r68 r69 ; (d25 d26 d27 d28)
rg105 = r67 r68 r69 r70 ; (d26 d27 d28 d29)
rg106 = r68 r69 r70 r71 ; (d27 d28 d29 d30)
rg107 = r69 r70 r71 r72 ; (d28 d29 d30 d31)
rg108 = r70 r71 r72 r41 ; (d29 d30 d31 d0)
rg109 = r71 r72 r41 r42 ; (d30 d31 d0 d1)
rg110 = r72 r41 r42 r43 ; (d31 d0 d1 d2)
rg111 = r81 r82 ; (q0 q1)
rg112 = r82 r83 ; (q1 q2)
rg113 = r83 r84 ; (q2 q3)
rg114 = r84 r85 ; (q3 q4)
rg115 = r85 r86 ; (q4 q5)
rg116 = r86 r87 ; (q5 q6)
rg117 = r87 r88 ; (q6 q7)
rg118 = r88 r89 ; (q7 q8)
rg119 = r89 r90 ; (q8 q9)
rg120 = r90 r91 ; (q9 q10)
rg121 = r91 r92 ; (q10 q11)
rg122 = r92 r93 ; (q11 q12)
rg123 = r93 r94 ; (q12 q13)
rg124 = r94 r95 ; (q13 q14)
rg125 = r95 r96 ; (q14 q15)
rg126 = r96 r97 ; (q15 q16)
rg127 = r97 r98 ; (q16 q17)
rg128 = r98 r99 ; (q17 q18)
rg129 = r99 r100 ; (q18 q19)
rg130 = r100 r101 ; (q19 q20)
rg131 = r101 r102 ; (q20 q21)
rg132 = r102 r103 ; (q21 q22)
rg133 = r103 r104 ; (q22 q23)
rg134 = r104 r105 ; (q23 q24)
rg135 = r105 r106 ; (q24 q25)
rg136 = r106 r107 ; (q25 q26)
rg137 = r107 r108 ; (q26 q27)
rg138 = r108 r109 ; (q27 q28)
rg139 = r109 r110 ; (q28 q29)
rg140 = r110 r111 ; (q29 q30)
rg141 = r111 r112 ; (q30 q31)
rg142 = r112 r81 ; (q31 q0)
rg143 = r81 r82 r83 ; (q0 q1 q2)
rg144 = r82 r83 r84 ; (q1 q2 q3)
rg145 = r83 r84 r85 ; (q2 q3 q4)
rg146 = r84 r85 r86 ; (q3 q4 q5)
rg147 = r85 r86 r87 ; (q4 q5 q6)
rg148 = r86 r87 r88 ; (q5 q6 q7)
rg149 = r87 r88 r89 ; (q6 q7 q8)
rg150 = r88 r89 r90 ; (q7 q8 q9)
rg151 = r89 r90 r91 ; (q8 q9 q10)
rg152 = r90 r91 r92 ; (q9 q10 q11)
rg153 = r91 r92 r93 ; (q10 q11 q12)
rg154 = r92 r93 r94 ; (q11 q12 q13)
rg155 = r93 r94 r95 ; (q12 q13 q14)
rg156 = r94 r95 r96 ; (q13 q14 q15)
rg157 = r95 r96 r97 ; (q14 q15 q16)
rg158 = r96 r97 r98 ; (q15 q16 q17)
rg159 = r97 r98 r99 ; (q16 q17 q18)
rg160 = r98 r99 r100 ; (q17 q18 q19)
rg161 = r99 r100 r101 ; (q18 q19 q20)
rg162 = r100 r101 r102 ; (q19 q20 q21)
rg163 = r101 r102 r103 ; (q20 q21 q22)
rg164 = r102 r103 r104 ; (q21 q22 q23)
rg165 = r103 r104 r105 ; (q22 q23 q24)
rg166 = r104 r105 r106 ; (q23 q24 q25)
rg167 = r105 r106 r107 ; (q24 q25 q26)
rg168 = r106 r107 r108 ; (q25 q26 q27)
rg169 = r107 r108 r109 ; (q26 q27 q28)
rg170 = r108 r109 r110 ; (q27 q28 q29)
rg171 = r109 r110 r111 ; (q28 q29 q30)
rg172 = r110 r111 r112 ; (q29 q30 q31)
rg173 = r111 r112 r81 ; (q30 q31 q0)
rg174 = r112 r81 r82 ; (q31 q0 q1)
rg175 = r81 r82 r83 r84 ; (q0 q1 q2 q3)
rg176 = r82 r83 r84 r85 ; (q1 q2 q3 q4)
rg177 = r83 r84 r85 r86 ; (q2 q3 q4 q5)
rg178 = r84 r85 r86 r87 ; (q3 q4 q5 q6)
rg179 = r85 r86 r87 r88 ; (q4 q5 q6 q7)
rg180 = r86 r87 r88 r89 ; (q5 q6 q7 q8)
rg181 = r87 r88 r89 r90 ; (q6 q7 q8 q9)
rg182 = r88 r89 r90 r91 ; (q7 q8 q9 q10)
rg183 = r89 r90 r91 r92 ; (q8 q9 q10 q11)
rg184 = r90 r91 r92 r93 ; (q9 q10 q11 q12)
rg185 = r91 r92 r93 r94 ; (q10 q11 q12 q13)
rg186 = r92 r93 r94 r95 ; (q11 q12 q13 q14)
rg187 = r93 r94 r95 r96 ; (q12 q13 q14 q15)
rg188 = r94 r95 r96 r97 ; (q13 q14 q15 q16)
rg189 = r95 r96 r97 r98 ; (q14 q15 q16 q17)
rg190 = r96 r97 r98 r99 ; (q15 q16 q17 q18)
rg191 = r97 r98 r99 r100 ; (q16 q17 q18 q19)
rg192 = r98 r99 r100 r101 ; (q17 q18 q19 q20)
rg193 = r99 r100 r101 r102 ; (q18 q19 q20 q21)
rg194 = r100 r101 r102 r103 ; (q19 q20 q21 q22)
rg195 = r101 r102 r103 r104 ; (q20 q21 q22 q23)
rg196 = r102 r103 r104 r105 ; (q21 q22 q23 q24)
rg197 = r103 r104 r105 r106 ; (q22 q23 q24 q25)
rg198 = r104 r105 r106 r107 ; (q23 q24 q25 q26)
rg199 = r105 r106 r107 r108 ; (q24 q25 q26 q27)
rg200 = r106 r107 r108 r109 ; (q25 q26 q27 q28)
rg201 = r107 r108 r109 r110 ; (q26 q27 q28 q29)
rg202 = r108 r109 r110 r111 ; (q27 q28 q29 q30)
rg203 = r109 r110 r111 r112 ; (q28 q29 q30 q31)
rg204 = r110 r111 r112 r81 ; (q29 q30 q31 q0)
rg205 = r111 r112 r81 r82 ; (q30 q31 q0 q1)
rg206 = r112 r81 r82 r83 ; (q31 q0 q1 q2)

; General-purpose registers
bank0 {
    top_level_class = class0
    stack_to_stack_class = class2
    spillslot_size = 8

    ; General-purpose registers + stack
    class0 {
        allows_spillslots
        spill_cost = 0.5
        members = r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r16 r17 r18 r19 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30 r33 r34 r35 r36 r37 r38 r39 r40
        allocation_order = r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r16 r17 r18 r30 r19 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29
    }

    ; General-purpose stack only
    class1: class0 {
        allows_spillslots
        spill_cost = 0
        members = r33 r34 r35 r36 r37 r38 r39 r40
        allocation_order = 
    }

    ; General-purpose registers
    class2: class0 {
        spill_cost = 1
        members = r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r16 r17 r18 r19 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30
        allocation_order = r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r16 r17 r18 r30 r19 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29
    }

    ; Aligned register pairs for CASP
    class3: class2 {
        group_size = 2
        spill_cost = 1
        members = rg0 rg1 rg2 rg3 rg4 rg5 rg6 rg7 rg8 rg9 rg10 rg11 rg12 rg13 rg14
        allocation_order = rg0 rg1 rg2 rg3 rg4 rg5 rg6 rg7 rg8 rg9 rg10 rg11 rg12 rg13 rg14
    }
}

; 64-bit FP/SIMD registers
bank1 {
    top_level_class = class4
    stack_to_stack_class = class6
    spillslot_size = 8

    ; 64-bit FP/SIMD registers + stack
    class4 {
        allows_spillslots
        spill_cost = 0.5
        members = r41 r42 r43 r44 r45 r46 r47 r48 r49 r50 r51 r52 r53 r54 r55 r56 r57 r58 r59 r60 r61 r62 r63 r64 r65 r66 r67 r68 r69 r70 r71 r72 r73 r74 r75 r76 r77 r78 r79 r80
        allocation_order = r41 r42 r43 r44 r45 r46 r47 r48 r57 r58 r59 r60 r61 r62 r63 r64 r65 r66 r67 r68 r69 r70 r71 r72 r49 r50 r51 r52 r53 r54 r55 r56
    }

    ; 64-bit FP/SIMD stack only
    class5: class4 {
        allows_spillslots
        spill_cost = 0
        members = r73 r74 r75 r76 r77 r78 r79 r80
        allocation_order = 
    }

    ; 64-bit FP/SIMD registers
    class6: class4 {
        spill_cost = 1
        members = r41 r42 r43 r44 r45 r46 r47 r48 r49 r50 r51 r52 r53 r54 r55 r56 r57 r58 r59 r60 r61 r62 r63 r64 r65 r66 r67 r68 r69 r70 r71 r72
        allocation_order = r41 r42 r43 r44 r45 r46 r47 r48 r57 r58 r59 r60 r61 r62 r63 r64 r65 r66 r67 r68 r69 r70 r71 r72 r49 r50 r51 r52 r53 r54 r55 r56
    }

    ; 64-bit FP/SIMD register pairs
    class7: class6 {
        group_size = 2
        spill_cost = 1
        members = rg15 rg16 rg17 rg18 rg19 rg20 rg21 rg22 rg23 rg24 rg25 rg26 rg27 rg28 rg29 rg30 rg31 rg32 rg33 rg34 rg35 rg36 rg37 rg38 rg39 rg40 rg41 rg42 rg43 rg44 rg45 rg46
        allocation_order = rg15 rg16 rg17 rg18 rg19 rg20 rg21 rg31 rg32 rg33 rg34 rg35 rg36 rg37 rg38 rg39 rg40 rg41 rg42 rg43 rg44 rg45 rg46 rg22 rg23 rg24 rg25 rg26 rg27 rg28 rg29 rg30
    }

    ; 64-bit FP/SIMD register triples
    class8: class6 {
        group_size = 3
        spill_cost = 1
        members = rg47 rg48 rg49 rg50 rg51 rg52 rg53 rg54 rg55 rg56 rg57 rg58 rg59 rg60 rg61 rg62 rg63 rg64 rg65 rg66 rg67 rg68 rg69 rg70 rg71 rg72 rg73 rg74 rg75 rg76 rg77 rg78
        allocation_order = rg47 rg48 rg49 rg50 rg51 rg52 rg63 rg64 rg65 rg66 rg67 rg68 rg69 rg70 rg71 rg72 rg73 rg74 rg75 rg76 rg77 rg78 rg53 rg54 rg55 rg56 rg57 rg58 rg59 rg60 rg61 rg62
    }

    ; 64-bit FP/SIMD register quads
    class9: class6 {
        group_size = 4
        spill_cost = 1
        members = rg79 rg80 rg81 rg82 rg83 rg84 rg85 rg86 rg87 rg88 rg89 rg90 rg91 rg92 rg93 rg94 rg95 rg96 rg97 rg98 rg99 rg100 rg101 rg102 rg103 rg104 rg105 rg106 rg107 rg108 rg109 rg110
        allocation_order = rg79 rg80 rg81 rg82 rg83 rg95 rg96 rg97 rg98 rg99 rg100 rg101 rg102 rg103 rg104 rg105 rg106 rg107 rg108 rg109 rg110 rg84 rg85 rg86 rg87 rg88 rg89 rg90 rg91 rg92 rg93 rg94
    }
}

; 128-bit FP/SIMD registers
bank2 {
    top_level_class = class10
    stack_to_stack_class = class12
    spillslot_size = 16

    ; 128-bit FP/SIMD registers + stack
    class10 {
        allows_spillslots
        spill_cost = 0.5
        members = r81 r82 r83 r84 r85 r86 r87 r88 r89 r90 r91 r92 r93 r94 r95 r96 r97 r98 r99 r100 r101 r102 r103 r104 r105 r106 r107 r108 r109 r110 r111 r112 r113 r114 r115 r116 r117 r118 r119 r120
        allocation_order = r81 r82 r83 r84 r85 r86 r87 r88 r89 r90 r91 r92 r93 r94 r95 r96 r97 r98 r99 r100 r101 r102 r103 r104 r105 r106 r107 r108 r109 r110 r111 r112
    }

    ; 128-bit FP/SIMD stack only
    class11: class10 {
        allows_spillslots
        spill_cost = 0
        members = r113 r114 r115 r116 r117 r118 r119 r120
        allocation_order = 
    }

    ; 128-bit FP/SIMD registers
    class12: class10 {
        spill_cost = 1
        members = r81 r82 r83 r84 r85 r86 r87 r88 r89 r90 r91 r92 r93 r94 r95 r96 r97 r98 r99 r100 r101 r102 r103 r104 r105 r106 r107 r108 r109 r110 r111 r112
        allocation_order = r81 r82 r83 r84 r85 r86 r87 r88 r89 r90 r91 r92 r93 r94 r95 r96 r97 r98 r99 r100 r101 r102 r103 r104 r105 r106 r107 r108 r109 r110 r111 r112
    }

    ; 128-bit FP/SIMD register pairs
    class13: class12 {
        group_size = 2
        spill_cost = 1
        members = rg111 rg112 rg113 rg114 rg115 rg116 rg117 rg118 rg119 rg120 rg121 rg122 rg123 rg124 rg125 rg126 rg127 rg128 rg129 rg130 rg131 rg132 rg133 rg134 rg135 rg136 rg137 rg138 rg139 rg140 rg141 rg142
        allocation_order = rg111 rg112 rg113 rg114 rg115 rg116 rg117 rg118 rg119 rg120 rg121 rg122 rg123 rg124 rg125 rg126 rg127 rg128 rg129 rg130 rg131 rg132 rg133 rg134 rg135 rg136 rg137 rg138 rg139 rg140 rg141 rg142
    }

    ; 128-bit FP/SIMD register triples
    class14: class12 {
        group_size = 3
        spill_cost = 1
        members = rg143 rg144 rg145 rg146 rg147 rg148 rg149 rg150 rg151 rg152 rg153 rg154 rg155 rg156 rg157 rg158 rg159 rg160 rg161 rg162 rg163 rg164 rg165 rg166 rg167 rg168 rg169 rg170 rg171 rg172 rg173 rg174
        allocation_order = rg143 rg144 rg145 rg146 rg147 rg148 rg149 rg150 rg151 rg152 rg153 rg154 rg155 rg156 rg157 rg158 rg159 rg160 rg161 rg162 rg163 rg164 rg165 rg166 rg167 rg168 rg169 rg170 rg171 rg172 rg173 rg174
    }

    ; 128-bit FP/SIMD register quads
    class15: class12 {
        group_size = 4
        spill_cost = 1
        members = rg175 rg176 rg177 rg178 rg179 rg180 rg181 rg182 rg183 rg184 rg185 rg186 rg187 rg188 rg189 rg190 rg191 rg192 rg193 rg194 rg195 rg196 rg197 rg198 rg199 rg200 rg201 rg202 rg203 rg204 rg205 rg206
        allocation_order = rg175 rg176 rg177 rg178 rg179 rg180 rg181 rg182 rg183 rg184 rg185 rg186 rg187 rg188 rg189 rg190 rg191 rg192 rg193 rg194 rg195 rg196 rg197 rg198 rg199 rg200 rg201 rg202 rg203 rg204 rg205 rg206
    }
}
