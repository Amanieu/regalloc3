// Entities
number   = @{ ASCII_DIGIT+ }
float    = @{ ASCII_DIGIT+ ~ ("." ~ ASCII_DIGIT+)? }
value    = ${ "%" ~ number }
unit     = ${ "unit" ~ number }
physreg  = ${ "r" ~ number }
regclass = ${ "class" ~ number }
regbank  = ${ "bank" ~ number }
inst     = ${ "inst" ~ number }
block    = ${ "block" ~ number }

// Comma-separated lists of entities
value_list = { (value ~ ",")* ~ value? }
block_list = { (block ~ ",")* ~ block? }

// Value declaration
remat_cost        =  { "cheaper_than_move" | "cheaper_than_load" }
remat             =  { "remat" ~ "(" ~ remat_cost ~ "," ~ regclass ~ ")" }
value_attribute   = _{ regbank | remat }
value_declaration =  { value ~ "=" ~ value_attribute+ }

// Start of block label
frequency     = { "freq" ~ "(" ~ float ~ ")" }
critical_edge = { "critical_edge"? }
block_label   = { block ~ ("(" ~ value_list ~ ")")? ~ frequency ~ critical_edge ~ ":" }

// Instruction operand
reuse                  =  { "reuse" ~ "(" ~ number ~ ")" }
constraint             =  { physreg | regclass | reuse }
nonallocatable_operand =  { "NonAllocatable" ~ ":" ~ physreg }
operand_kind           =  { "Def" | "EarlyDef" | "Use" }
normal_operand         =  { operand_kind ~ "(" ~ value_list ~ ")" ~ ":" ~ constraint }
operand                = _{ normal_operand | nonallocatable_operand }
clobber                =  { "Clobber" ~ ":" ~ unit }

// Instruction
attribute   = { "pure" }
normal_inst = { "inst" }
branch      = { "branch" ~ "(" ~ block_list ~ ")" }
jump        = { "jump" ~ block ~ ("(" ~ value_list ~ ")")? }
ret         = { "ret" }
opcode      = { normal_inst | branch | jump | ret }
inst_label  = { inst ~ ":" }
instruction = { inst_label? ~ opcode ~ attribute* ~ operand* ~ clobber* }

// Declarations come before the body
declaration = _{ value_declaration }
body        = _{ block_label | instruction }
function    = _{ SOI ~ (declaration? ~ NEWLINE)* ~ (body? ~ NEWLINE)* ~ body? ~ EOI }

WHITESPACE = _{ " " | "\t" }
COMMENT    = _{ ";" ~ (!NEWLINE ~ ANY)* }
