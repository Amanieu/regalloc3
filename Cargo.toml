[workspace]
members = ["regalloc3-tool", "fuzz"]

[package]
name = "regalloc3"
authors = ["Amanieu d'Antras <amanieu@gmail.com>"]
version = "0.1.0"
edition = "2024"
license = "MIT OR Apache-2.0"
description = "New register allocator implementation inspired by regalloc2 and LLVM's greedy register allocator"
repository = "https://github.com/Amanieu/regalloc3"
categories = ["compilers", "no-std"]
exclude = [".github"]

[dependencies]
anyhow = { version = "1.0.75", default-features = false }
arbitrary = { version = "1.3.2", optional = true, features = ["derive"] }
bitflags = "2.4.2"
hashbrown = "0.15.2"
smallvec = { version = "1.11.2", features = ["union"] }
log = { version = "0.4.20", default-features = false }
ordered-float = { version = "5.0.0", default-features = false }
pest = { version = "2.7.5", optional = true }
pest_derive = { version = "2.7.5", optional = true, default-features = false }
rustc-hash = { version = "2.0.0", default-features = false }
serde = { version = "1.0.193", optional = true, default-features = false, features = [
    "derive",
    "alloc",
] }
clap = { version = "4.5.22", features = ["derive"], optional = true }

[features]
# Support for parsing a GenericFunction from a text representation.
# Requires std.
parse = ["dep:pest", "dep:pest_derive", "anyhow/std"]

# Support for serializing and de-serializing all public types.
serde = ["dep:serde"]

# Support for generating randomized functions for testing.
# Requires std.
arbitrary = ["dep:arbitrary"]

# Enables detailed logging which can be somewhat expensive.
trace-log = []

# Adds `#[derive(Args)]` for register allocator options. Requires std.
clap = ["dep:clap"]

# Collects statistics from the register allocator internals.
stats = []

# Exposes internal APIs for fuzzing. Only for use by the fuzzer.
fuzzing = []

# Build optimized binaries with debug info for use by profiling tools.
[profile.release]
debug = 1
[profile.bench]
debug = 1

# Enable non-default features for docs.rs
[package.metadata.docs.rs]
features = ["parse", "arbitrary", "serde"]
